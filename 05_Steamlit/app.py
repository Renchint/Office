import streamlit as st
import pandas as pd
import folium
from streamlit_folium import st_folium

df = pd.read_excel('05_Steamlit/Negtgel_office.xlsx', sheet_name="2", header=1)

st.title("–ë–∞—Ä–∏–ª–≥–∞ –æ–±—ä–µ–∫—Ç—ã–Ω –º—ç–¥—ç—ç–ª—ç–ª –æ—Ä—É—É–ª–∞—Ö –∞–ø–ø")

# –ó—ç—ç–ª —Ö“Ø—Å—ç–≥—á–∏–π–Ω –Ω—ç—Ä
customer_name = st.text_input("–ó—ç—ç–ª —Ö“Ø—Å—ç–≥—á–∏–π–Ω –Ω—ç—Ä")

# –ó—ç—ç–ª–∏–π–Ω –∑–æ—Ä–∏—É–ª–∞–ª—Ç
loan_purpose = st.selectbox("–ó—ç—ç–ª–∏–π–Ω –∑–æ—Ä–∏—É–ª–∞–ª—Ç", ["–ë–∏–∑–Ω–µ—Å–∏–π–Ω –∑—ç—ç–ª", "–°–∞–Ω—Ö“Ø“Ø–≥–∏–π–Ω —Ç“Ø—à–∏–≥ –∑—ç—ç–ª", "–®—É—É—Ä—Ö–∞–π “Ø—ç—ç–ª"])

if loan_purpose == "–ë–∏–∑–Ω–µ—Å–∏–π–Ω –∑—ç—ç–ª":
    loan_purpose_value = 0.7
elif loan_purpose == "–°–∞–Ω—Ö“Ø“Ø–≥–∏–π–Ω —Ç“Ø—à–∏–≥ –∑—ç—ç–ª":
    loan_purpose_value = 0.5
elif loan_purpose == "–®—É—É—Ä—Ö–∞–π “Ø—ç—ç–ª":
    loan_purpose_value = 0.5
else:
    loan_purpose_value = 1


# –ë–∞—Ä—å—Ü–∞–∞ —Ö”©—Ä”©–Ω–≥–∏–π–Ω —Ö–∞—è–≥
collateral_reg_num = st.text_input("–ë–∞—Ä—å—Ü–∞–∞ —Ö”©—Ä”©–Ω–≥–∏–π–Ω —É–ª—Å—ã–Ω –±“Ø—Ä—Ç–≥—ç–ª–∏–π–Ω –¥—É–≥–∞–∞—Ä")

# –î“Ø“Ø—Ä—ç–≥ —Å–æ–Ω–≥–æ—Ö
district_options = df['–î“Ø“Ø—Ä—ç–≥'].dropna().unique().tolist()
selected_district = st.selectbox("–î“Ø“Ø—Ä—ç–≥ —Å–æ–Ω–≥–æ–Ω–æ —É—É:", district_options)

# –•–æ—Ä–æ–æ —Å–æ–Ω–≥–æ—Ö
filtered_df = df[df['–î“Ø“Ø—Ä—ç–≥'] == selected_district]
khoroo_options = filtered_df['–•–æ—Ä–æ–æ'].dropna().unique().tolist()
selected_khoroo = st.selectbox("–•–æ—Ä–æ–æ —Å–æ–Ω–≥–æ–Ω–æ —É—É:", khoroo_options)

# –ë–∞–π—Ä–Ω—ã –¥—É–≥–∞–∞—Ä —Å–æ–Ω–≥–æ—Ö
filtered_df2 = filtered_df[filtered_df['–•–æ—Ä–æ–æ'] == selected_khoroo]
bair_options = filtered_df2['–ë–∞–π—Ä–Ω—ã –¥—É–≥–∞–∞—Ä'].dropna().unique().tolist()
selected_bair = st.selectbox("–ë–∞–π—Ä–Ω—ã –¥—É–≥–∞–∞—Ä —Å–æ–Ω–≥–æ–Ω–æ —É—É:", bair_options)

# –ë–∞–π—Ä–Ω—ã –º—ç–¥—ç—ç–ª–ª“Ø“Ø–¥–∏–π–≥ —Ö–∞—Ä—É—É–ª–∞—Ö, –±–∞–π—Ä–Ω—ã –¥–∞–≤—Ö–∞—Ä —Å–æ–Ω–≥–æ—Ö
matched_row = filtered_df2[
    filtered_df2['–ë–∞–π—Ä–Ω—ã –¥—É–≥–∞–∞—Ä'] == selected_bair
]

if not matched_row.empty:
    row = matched_row.iloc[0]

 # –ë–∞–π—Ä–Ω—ã “Ø–Ω–¥—Å—ç–Ω –º—ç–¥—ç—ç–ª—ç–ª box –¥–æ—Ç–æ—Ä
    col1, col2 = st.columns(2)

    with col1:
        st.success(
            f"**–ë–∞—Ä–∏–ª–≥—ã–Ω –Ω—ç—Ä:** {row['–ë–∞—Ä–∏–ª–≥—ã–Ω –Ω—ç—Ä']}  \n"
            f"**–ù–∏–π—Ç –¥–∞–≤—Ö–∞—Ä—ã–Ω —Ç–æ–æ:** {row['–ù–∏–π—Ç –¥–∞–≤—Ö–∞—Ä—ã–Ω —Ç–æ–æ']}  \n"
            f"**–ê—à–∏–≥–ª–∞–ª—Ç–∞–¥ –æ—Ä—Å–æ–Ω –æ–Ω:** {row['–ê—à–∏–≥–ª–∞–ª—Ç–∞–¥ –æ—Ä—Å–æ–Ω –æ–Ω']}"
        )

    with col2:
        try:
            total_floors = int(row['–ù–∏–π—Ç –¥–∞–≤—Ö–∞—Ä—ã–Ω —Ç–æ–æ'])
            # –≠—Ö–ª—ç—ç–¥ —Ç—É—Å–≥–∞–π –¥–∞–≤—Ö–∞—Ä—É—É–¥—ã–≥ –∂–∞–≥—Å–∞–∞–ª—Ç–∞–Ω–¥ –Ω—ç–º—ç—Ö
            floor_options = ['B1 (–î–æ–æ–¥ –¥–∞–≤—Ö–∞—Ä)'] + list(range(1, total_floors + 1)) + ['–¢–µ—Ö–Ω–∏–∫–∏–π–Ω –¥–∞–≤—Ö–∞—Ä']
            
            # –°–æ–Ω–≥–æ–ª—Ç —Ö–∏–π—Ö
            selected_floor = st.selectbox("–û—Ñ—Ñ–∏—Å—ã–Ω –¥–∞–≤—Ö–∞—Ä —Å–æ–Ω–≥–æ–Ω–æ —É—É:", floor_options)
        except:
            st.warning("–ù–∏–π—Ç –¥–∞–≤—Ö–∞—Ä—ã–Ω —Ç–æ–æ —Ç–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π –±–∞–π–Ω–∞, –¥–∞–≤—Ö–∞—Ä —Å–æ–Ω–≥–æ—Ö –±–æ–ª–æ–º–∂–≥“Ø–π.")



    # OpenStreetMap “Ø“Ø—Å–≥—ç—Ö
    m = folium.Map(location=[row['lat'], row['lon']], zoom_start=17, tiles='OpenStreetMap')
    folium.Marker(
        [row['lat'], row['lon']],
        popup=f"{row['–ë–∞—Ä–∏–ª–≥—ã–Ω –Ω—ç—Ä']}<br>–ù–∏–π—Ç –¥–∞–≤—Ö–∞—Ä: {row['–ù–∏–π—Ç –¥–∞–≤—Ö–∞—Ä—ã–Ω —Ç–æ–æ']}<br>–û–Ω: {row['–ê—à–∏–≥–ª–∞–ª—Ç–∞–¥ –æ—Ä—Å–æ–Ω –æ–Ω']}",
        tooltip=row['–ë–∞—Ä–∏–ª–≥—ã–Ω –Ω—ç—Ä'],
        icon=folium.Icon(color='red')
    ).add_to(m)

    # Streamlit –¥—ç—ç—Ä —Ö–∞—Ä—É—É–ª–∞—Ö
    st_folium(m, width=700, height=500)

else:
    st.warning("–ú—ç–¥—ç—ç–ª—ç–ª –æ–ª–¥—Å–æ–Ω–≥“Ø–π.")

# –¢–ê–õ–ë–ê–ô–ù –•–≠–ú–ñ–≠–≠–ì –ì–ê–†–ê–ê–° –û–†–£–£–õ–ê–•
col1, col2 = st.columns([3, 1])  # –ë–∞—Ä—É—É–Ω —Ç–∞–ª–¥ –∂–∏–∂–∏–≥ –±–∞–≥–∞–Ω–∞ “Ø“Ø—Å–≥—ç–≤

with col1:
    area_input = st.text_input("–¢–∞–ª–±–∞–π–Ω —Ö—ç–º–∂—ç—ç –æ—Ä—É—É–ª–Ω–∞ —É—É (–º¬≤):")

with col2:
    if area_input:
        if area_input.replace('.', '', 1).isdigit():
            area = float(area_input)
            st.success(f"–¢–∞–Ω—ã –æ—Ä—É—É–ª—Å–∞–Ω —Ç–∞–ª–±–∞–π {area} –º¬≤")
        else:
            st.error("–ó”©–≤—Ö”©–Ω —Ç–æ–æ–Ω —É—Ç–≥–∞ –æ—Ä—É—É–ª–Ω–∞ —É—É!")

# –ó–∞—Å–≤–∞—Ä —Ö–∏–π—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π —ç—Å—ç—Ö
zaswar = st.selectbox(
    "–ó–∞—Å–≤–∞—Ä “Ø–π–ª—á–∏–ª–≥—ç—ç —Ö–∏–π—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π —ç—Å—ç—Ö ?",
    ["“Æ–≥“Ø–π", "–¢–∏–π–º"]
)

zaswar_value = 0.95 if zaswar == "–¢–∏–π–º" else 1
#st.write("–ó–∞—Å–≤–∞—Ä—ã–Ω —É—Ç–≥–∞:", zaswar_value)


#–¶–û–ù–•–ù–´ –¢–û–•–ò–†–£–£–õ–ì–ê
col1, col2 = st.columns([2.5, 1.5])

with col1:
# –¶–æ–Ω—Ö–Ω—ã –±–∞–π—Ä–ª–∞–ª
    orientation = st.selectbox(
        "–ù–∏–π—Ç —Ü–æ–Ω—Ö–Ω—ã 50%-–∞–∞—Å –¥—ç—ç—à –Ω—å —É—Ä–¥ –±–æ–ª–æ–Ω –±–∞—Ä—É—É–Ω –∑“Ø–≥ —Ä“Ø“Ø —Ö–∞—Ä—Å–∞–Ω —É—É?",
        [ "–¢–∏–π–º", "“Æ–≥“Ø–π"]
    )

    orientation_value = 1 if orientation == "–¢–∏–π–º" else 0.95
    #st.write("–ó–∞—Å–≤–∞—Ä—ã–Ω —É—Ç–≥–∞:", orientation_value)

with col2:
# –¶–æ–Ω—Ö —Ö–∞–∞–≥–¥—Å–∞–Ω —ç—Å—ç—Ö
    orchin = st.selectbox(
        "“Æ–∑—ç–≥–¥—ç—Ö –æ—Ä—á–∏–Ω —Ö—è–∑–≥–∞–∞—Ä–ª–∞–≥–¥—Å–∞–Ω —ç—Å—ç—Ö",
        ["“Æ–≥“Ø–π", "–ù–∏–π—Ç —Ü–æ–Ω—Ö–Ω—ã 25% —Ç–∞–≥–ª–∞–≥–¥—Å–∞–Ω", "–ù–∏–π—Ç —Ü–æ–Ω—Ö–Ω—ã 50% —Ç–∞–≥–ª–∞–≥–¥—Å–∞–Ω", "–ù–∏–π—Ç —Ü–æ–Ω—Ö–Ω—ã 75% —Ç–∞–≥–ª–∞–≥–¥—Å–∞–Ω", "–ù–∏–π—Ç —Ü–æ–Ω—Ö–Ω—ã 100% —Ç–∞–≥–ª–∞–≥–¥—Å–∞–Ω"]
    )

    if orchin == "“Æ–≥“Ø–π":
        orchin_value = 1
    elif orchin == "–ù–∏–π—Ç —Ü–æ–Ω—Ö–Ω—ã 25% —Ç–∞–≥–ª–∞–≥–¥—Å–∞–Ω":
        orchin_value = 0.9
    elif orchin == "–ù–∏–π—Ç —Ü–æ–Ω—Ö–Ω—ã 50% —Ç–∞–≥–ª–∞–≥–¥—Å–∞–Ω":
        orchin_value = 0.8
    elif orchin == "–ù–∏–π—Ç —Ü–æ–Ω—Ö–Ω—ã 75% —Ç–∞–≥–ª–∞–≥–¥—Å–∞–Ω":
        orchin_value = 0.7
    elif orchin == "–ù–∏–π—Ç —Ü–æ–Ω—Ö–Ω—ã 100% —Ç–∞–≥–ª–∞–≥–¥—Å–∞–Ω":
        orchin_value = 0.5
    else:
        orchin_value = 1  # Default —É—Ç–≥–∞

    #st.write("–û—á–∏–Ω—ã “Ø–Ω—ç–ª–≥—ç—ç:", orchin_value)

# –¢–û–•–ò–†–°–û–ù “Æ–ù–≠–õ–ì–≠–≠–ì –ê–í–ê–•
matched_row = df[
    (df['–î“Ø“Ø—Ä—ç–≥'] == selected_district) &
    (df['–•–æ—Ä–æ–æ'] == selected_khoroo) &
    (df['–ë–∞–π—Ä–Ω—ã –¥—É–≥–∞–∞—Ä'] == selected_bair)
]

if not matched_row.empty:
    base_price = matched_row.iloc[0]['“Æ–Ω—ç–ª–≥—ç—ç']
    
    # --- 5. –≠—Ü—Å–∏–π–Ω “Ø–Ω—ç–ª–≥—ç—ç —Ç–æ–æ—Ü–æ—Ö ---
    mkw = base_price * zaswar_value * orientation_value * orchin_value

    # --- 6. “Æ—Ä –¥“Ø–Ω —Ö–∞—Ä—É—É–ª–∞—Ö ---
    st.success(f"–û—Ñ—Ñ–∏—Å—Å—ã–Ω 1–º2 —Ç–∞–ª–±–∞–π —Å—É—É—Ä—å “Ø–Ω—ç–ª–≥—ç—ç: {mkw:,.0f} ‚ÇÆ")
else:
    st.warning("‚ö†Ô∏è –°–æ–Ω–≥–æ—Å–æ–Ω –º—ç–¥—ç—ç–ª—ç–ª–¥ —Ç–æ—Ö–∏—Ä–æ—Ö “Ø–Ω—ç–ª–≥—ç—ç –æ–ª–¥—Å–æ–Ω–≥“Ø–π.")


if area_input:
    try:
        area = float(area_input)
        final_price = area * mkw
        st.success(f"–û—Ñ—Ñ–∏—Å—ã–Ω –Ω–∏–π—Ç “Ø–Ω—ç–ª–≥—ç—ç: {final_price:,.0f} ‚ÇÆ")

        zzdu = final_price * loan_purpose_value
        st.info(f"–ó—ç—ç–ª –∑”©–≤—à”©”©—Ä”©—Ö –¥—ç—ç–¥ “Ø–Ω—ç: {zzdu:,.0f} ‚ÇÆ")

    except ValueError:
        st.error("üìè –¢–∞–ª–±–∞–π–Ω —Ö—ç–º–∂—ç—ç–≥ –∑”©–≤ –æ—Ä—É—É–ª–Ω–∞ —É—É (—Ç–æ–æ —Ö—ç–ª–±—ç—Ä—ç—ç—Ä).")
else:
    st.warning("üìè –¢–∞–ª–±–∞–π–Ω —Ö—ç–º–∂—ç—ç–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É.")